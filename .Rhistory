#
ggplot(data = fire,
mapping = aes(x = Inc_des, fill = Inc_des)) +
geom_bar() +  # We have an issue here
scale_x_discrete(limits = incident$Inc_des, label=function(x) stringr::str_wrap(x,6)) +
xlab("Incident Description")
#
ggplot(data = fire,
mapping = aes(x = Inc_des, fill = Inc_des)) +
geom_bar() +  # We have an issue here
scale_x_discrete(l label=function(x) stringr::str_wrap(x,6)) +
#
ggplot(data = fire,
mapping = aes(x = Inc_des, fill = Inc_des)) +
geom_bar() +  # We have an issue here
scale_x_discrete(label=function(x) stringr::str_wrap(x,6)) +
xlab("Incident Description")
#
ggplot(data = fire,
mapping = aes(x = Inc_des, fill = Inc_des)) +
geom_bar() +  # We have an issue here
scale_x_discrete(label=function(x) stringr::str_wrap(x,6)) +
xlab("Incident Description") +
guides('none')
#
ggplot(data = fire,
mapping = aes(x = Inc_des, fill = Inc_des)) +
geom_bar() +  # We have an issue here
scale_x_discrete(label=function(x) stringr::str_wrap(x,6)) +
xlab("Incident Description") +
guides(fill = 'none')
#
ggplot(data = incident,
mapping = aes(x = Inc_des, fill = Inc_des)) +
geom_bar() +  # We have an issue here
scale_x_discrete(label=function(x) stringr::str_wrap(x,6)) +
xlab("Incident Description") +
guides(fill = 'none')
#
ggplot(data = incident,
mapping = aes(x = Inc_des, fill = Inc_des)) +
geom_bar() +  # We have an issue here
scale_x_discrete(label=function(x) stringr::str_wrap(x,12)) +
xlab("Incident Description") +
guides(fill = 'none')
#
ggplot(data = incident,
mapping = aes(x = Inc_des, fill = Inc_des)) +
geom_bar() +  # We have an issue here
scale_x_discrete(label=function(x) stringr::str_wrap(x,20)) +
xlab("Incident Description") +
guides(fill = 'none')
#
ggplot(data = incident,
mapping = aes(x = Inc_des, fill = Inc_des)) +
geom_bar() +  # We have an issue here
scale_x_discrete(label=function(x) stringr::str_wrap(x,18)) +
xlab("Incident Description") +
guides(fill = 'none')
#
incident <- fire %>%
group_by(Inc_des) %>%
summarize(count = n()) %>%
arrange(desc(count)) %>%
filter(count > 90, Inc_des != 'EMS call') %>%
mutate(Inc_des = as.character(Inc_des), Inc_des = str_trunc(Inc_des,40), Inc_des = as.factor(Inc_des))
#
ggplot(data = incident,
mapping = aes(x = Inc_des, fill = Inc_des)) +
geom_bar() +  # We have an issue here
scale_x_discrete(label=function(x) stringr::str_wrap(x,18)) +
xlab("Incident Description") +
guides(fill = 'none')
#
ggplot(data = incident,
mapping = aes(x = count, fill = Inc_des)) +
geom_bar() +  # We have an issue here
scale_x_discrete(label=function(x) stringr::str_wrap(x,18)) +
xlab("Incident Description") +
guides(fill = 'none')
#
incident <- fire %>%
group_by(Inc_des) %>%
summarize(count = n()) %>%
arrange(desc(count)) %>%
filter(count > 90, Inc_des != 'EMS call')
#
ggplot(data = incident,
mapping = aes(x = Inc_des, fill = Inc_des)) +
geom_bar() +  # We have an issue here
scale_x_discrete(label=function(x) stringr::str_wrap(x,18)) +
xlab("Incident Description") +
guides(fill = 'none')
incident
#
ggplot(data = incident,
mapping = aes(x = Inc_des, fill = Inc_des)) +
geom_histogram() +  # We have an issue here
scale_x_discrete(label=function(x) stringr::str_wrap(x,18)) +
xlab("Incident Description") +
guides(fill = 'none')
#
ggplot(data = incident,
mapping = aes(x = Inc_des, fill = Inc_des)) +
geom_bar() +  # We have an issue here
scale_x_discrete(label=function(x) stringr::str_wrap(x,18)) +
xlab("Incident Description") +
guides(fill = 'none')
in2 <- fire %>%
mutate(Inc_des = as.character(Inc_des), Inc_des = str_trunc(Inc_des,20), Inc_des = as.factor(Inc_des))
#
ggplot(data = in2,
mapping = aes(x = Inc_des, fill = Inc_des)) +
geom_bar() +  # We have an issue here
scale_x_discrete(label=function(x) stringr::str_wrap(x,6)) +
xlab("Incident Description") +
guides(fill = 'none')
in2 <- fire %>%
filter(count > 90, Inc_des != 'EMS call') %>%
mutate(Inc_des = as.character(Inc_des), Inc_des = str_trunc(Inc_des,20), Inc_des = as.factor(Inc_des))
in2 <- fire %>%
mutate(Inc_des = as.character(Inc_des), Inc_des = str_trunc(Inc_des,20), Inc_des = as.factor(Inc_des))
#
ggplot(data = in2,
mapping = aes(x = Inc_des, fill = Inc_des)) +
geom_bar() +  # We have an issue here
scale_x_discrete(limits = incident$Inc_des, label=function(x) stringr::str_wrap(x,6)) +
xlab("Incident Description") +
guides(fill = 'none')
#
incident <- fire %>%
group_by(Inc_des) %>%
summarize(count = n()) %>%
arrange(desc(count)) %>%
filter(count > 90)
in2 <- fire %>%
mutate(Inc_des = as.character(Inc_des), Inc_des = str_trunc(Inc_des,20), Inc_des = as.factor(Inc_des))
#
ggplot(data = in2,
mapping = aes(x = Inc_des, fill = Inc_des)) +
geom_bar() +  # We have an issue here
scale_x_discrete(limits = incident$Inc_des, label=function(x) stringr::str_wrap(x,6)) +
xlab("Incident Description") +
guides(fill = 'none')
#
ggplot(data = in2,
mapping = aes(x = Inc_des, fill = Inc_des)) +
geom_bar() +  # We have an issue here
scale_x_discrete(label=function(x) stringr::str_wrap(x,6)) +
xlab("Incident Description") +
guides(fill = 'none')
incident
#
ggplot(data = fire,
mapping = aes(x = Inc_des, fill = Inc_des)) +
geom_bar() +  # We have an issue here
scale_x_discrete(label=function(x) stringr::str_trunc(x,6)) +
xlab("Incident Description") +
guides(fill = 'none')
#
ggplot(data = fire,
mapping = aes(x = Inc_des, fill = Inc_des)) +
geom_bar() +  # We have an issue here
scale_x_discrete(limits = incident$Inc_des, label=function(x) stringr::str_trunc(x,6)) +
xlab("Incident Description") +
guides(fill = 'none')
#
ggplot(data = fire,
mapping = aes(x = Inc_des, fill = Inc_des)) +
geom_bar() +  # We have an issue here
scale_x_discrete(limits = incident$Inc_des, label=function(x) stringr::str_trunc(x,12)) +
xlab("Incident Description") +
guides(fill = 'none')
#
incident <- fire %>%
group_by(Inc_des) %>%
summarize(count = n()) %>%
arrange(desc(count)) %>%
filter(count > 90, Inc_des != 'EMS call')
#
ggplot(data = fire,
mapping = aes(x = Inc_des, fill = Inc_des)) +
geom_bar() +  # We have an issue here
scale_x_discrete(limits = incident$Inc_des, label=function(x) stringr::str_trunc(x,12)) +
xlab("Incident Description") +
guides(fill = 'none')
#
ggplot(data = fire,
mapping = aes(x = Inc_des, fill = Inc_des)) +
geom_bar() +  # We have an issue here
scale_x_discrete(limits = incident$Inc_des, label=function(x) stringr::str_trunc(x,10)) +
xlab("Incident Description") +
guides(fill = 'none')
#
ggplot(data = fire,
mapping = aes(x = Inc_des, fill = Inc_des)) +
geom_bar() +  # We have an issue here
scale_x_discrete(limits = incident$Inc_des, label=function(x) stringr::str_trunc(x,10)) +
xlab("Incident Description") +
guides(fill = 'none') +
coord_flip()
#
ggplot(data = fire,
mapping = aes(x = Inc_des, fill = Inc_des)) +
geom_bar() +  # We have an issue here
scale_x_discrete(limits = incident$Inc_des, label=function(x) stringr::str_trunc(x,18)) +
xlab("Incident Description") +
guides(fill = 'none') +
coord_flip()
incident
#
ggplot(data = fire,
mapping = aes(x = Inc_des, fill = Inc_des)) +
geom_bar() +  # We have an issue here
scale_x_discrete(limits = incident$Inc_des, label=function(x) stringr::str_trunc(x,18)) +
xlab("Incident Description") +
guides(fill = 'none') +
coord_flip()
#
incident <- fire %>%
group_by(Inc_des) %>%
summarize(count = n()) %>%
arrange(desc(count)) %>%
filter(count > 90, Inc_des != 'EMS call') %>%
head(10)
#
ggplot(data = fire,
mapping = aes(x = Inc_des, fill = Inc_des)) +
geom_bar() +  # We have an issue here
scale_x_discrete(limits = incident$Inc_des, label=function(x) stringr::str_trunc(x,18)) +
xlab("Incident Description") +
guides(fill = 'none') +
coord_flip()
#
incident <- fire %>%
group_by(Inc_des) %>%
summarize(count = n()) %>%
arrange(count) %>%
filter(count > 90, Inc_des != 'EMS call') %>%
tail(10)
#
ggplot(data = fire,
mapping = aes(x = Inc_des, fill = Inc_des)) +
geom_bar() +  # We have an issue here
scale_x_discrete(limits = incident$Inc_des, label=function(x) stringr::str_trunc(x,18)) +
xlab("Incident Description") +
guides(fill = 'none') +
coord_flip()
incident
#
ggplot(data = fire,
mapping = aes(x = Inc_des, fill = Inc_des)) +
geom_bar() +  # We have an issue here
scale_x_discrete(limits = incident$Inc_des, label=function(x) stringr::str_trunc(x,18)) +
xlab("Incident Description") +
guides(fill = 'none') +
coord_flip()
#
incident <- fire %>%
group_by(Inc_des) %>%
summarize(count = n()) %>%
arrange(count) %>%
filter(count > 90, Inc_des != 'EMS call') %>%
tail(10)
incident
#
ggplot(data = fire,
mapping = aes(x = Inc_des, fill = Inc_des)) +
geom_bar() +  # We have an issue here
scale_x_discrete(limits = incident$Inc_des, label=function(x) stringr::str_trunc(x,18)) +
xlab("Incident Description") +
guides(fill = 'none') +
coord_flip()
fire %>%
group_by(Inc_des) %>%
summarize(count = n()) %>%
filter(Inc_des == 'EMS call')
# Loading of packages we will use for our project
library(tidyverse)
library(lubridate)
library(leaflet)
library(gridExtra)
# Loading of the data frame fire to use
fire <- read.csv("O_fire_new.csv", na.strings = '', stringsAsFactors = TRUE)
# Modification of variable names
names(fire)[3] <- "Inc_num"            # Incident number
names(fire)[4] <- "Inc_des"            # Incident description
names(fire)[5] <- "Alm_dt"             # Alarm date and time
names(fire)[6] <- "Dis_dt"             # Dispatch date and time
names(fire)[7] <- "Not_dt"             # Dispatch Notified Date and Time
names(fire)[8] <- "Roll_dt"            # Unit responding Date and Time
names(fire)[9] <- "Arv_dt"             # Arrival Date and Time
names(fire)[10] <- "Ins_dt"            # In Service Time
# Additional latitude and longitude columns
fire <- fire %>%
mutate(geopoint2 = str_sub(geopoint, 1,-1)) %>%
separate(geopoint2, into = c('Lat', 'Long'), sep = ',')%>%
mutate(Long = as.numeric(Long), Lat =as.numeric(Lat))
#  Further "cleaning"
alarm <- fire %>%
# modification of variables for the graphs
mutate(Call = mdy_hm(Alm_dt),
Date = date(Call),
Mon = month(Call, label = TRUE),
Weekday = wday(Call, label = TRUE),
Hour = as.ordered(hour(Call)+1),
HourNum = hour(Call)+1) %>%
# modification of variables for the summary statistics
mutate(MonNum = month(Call, label = FALSE),
WeekdayNum = wday(Call, label = FALSE))
#* alarm  %>%
#  summarise(meanCall = mean(Call),
#           meanDate = mean(Date),
#            meanMon = month(round(mean(MonNum)), label = TRUE),
#           meanWeekDay = wday(round(mean(WeekdayNum)), label = TRUE))
# summary statistics
summary(alarm$HourNum)
perHour <- alarm %>%
group_by(Hour) %>%
summarise(count = n())
stats <- perHour %>%
summarise(maxCalls = max(count),
minCalls = min(count))
left_join(stats, perHour, by = c( 'maxCalls' = 'count')) %>% select(Hour, maxCalls)
left_join(stats, perHour, by = c('minCalls' = 'count')) %>% select(Hour, minCalls)
# histogram of number of calls by hour
ggplot(data = alarm,
mapping = aes(x= Hour, fill = Hour)) +
geom_bar( binwidth = 1, bins = 24) +
labs(title = "Number of calls per Hour", y='Number of calls', x='Hour of the day') +
guides(fill = 'none')
# Loading of packages we will use for our project
library(tidyverse)
library(lubridate)
library(leaflet)
library(gridExtra)
# Loading of the data frame fire to use
fire <- read.csv("O_fire_new.csv", na.strings = '', stringsAsFactors = TRUE)
# Modification of variable names
names(fire)[3] <- "Inc_num"            # Incident number
names(fire)[4] <- "Inc_des"            # Incident description
names(fire)[5] <- "Alm_dt"             # Alarm date and time
names(fire)[6] <- "Dis_dt"             # Dispatch date and time
names(fire)[7] <- "Not_dt"             # Dispatch Notified Date and Time
names(fire)[8] <- "Roll_dt"            # Unit responding Date and Time
names(fire)[9] <- "Arv_dt"             # Arrival Date and Time
names(fire)[10] <- "Ins_dt"            # In Service Time
# Additional latitude and longitude columns
fire <- fire %>%
mutate(geopoint2 = str_sub(geopoint, 1,-1)) %>%
separate(geopoint2, into = c('Lat', 'Long'), sep = ',')%>%
mutate(Long = as.numeric(Long), Lat =as.numeric(Lat))
#  using dplyr and leaflet we filtered how much zoom and what part of the world the map would show
m <- leaflet() %>%
addTiles() %>%
setView(lat = 44.475, lng = -73.212, zoom = 12)
# Using leaflet, we made a map showing circles on the location of each incident.
m  %>% addCircles(lng = fire$Long, lat = fire$Lat)
# Amount of calls with the Incident Description being 'EMS call'
fire %>%
group_by(Inc_des) %>%
summarize(count = n()) %>%
filter(Inc_des == 'EMS call')
#
incident <- fire %>%
group_by(Inc_des) %>%
summarize(count = n()) %>%
arrange(count) %>%
filter(count > 90, Inc_des != 'EMS call') %>%
tail(10)
incident
#
ggplot(data = fire,
mapping = aes(x = Inc_des, fill = Inc_des)) +
geom_bar() +  # We have an issue here
scale_x_discrete(limits = incident$Inc_des, label=function(x) stringr::str_trunc(x,18)) +
xlab("Incident Description") +
guides(fill = 'none') +
coord_flip()
# Amount of calls with the Incident Description being 'EMS call'
fire %>%
group_by(Inc_des) %>%
summarize(count = n()) %>%
filter(Inc_des == 'EMS call')
#
incident <- fire %>%
group_by(Inc_des) %>%
summarize(count = n()) %>%
arrange(count) %>%
filter(count > 90, Inc_des != 'EMS call') %>%
tail(10)
incident
#
ggplot(data = fire,
mapping = aes(x = Inc_des, fill = Inc_des)) +
geom_bar() +  # We have an issue here
scale_x_discrete(limits = incident$Inc_des, label=function(x) stringr::str_trunc(x,18)) +
xlab("Incident Description") +
guides(fill = 'none') +
coord_flip()
# Amount of calls with the Incident Description being 'EMS call'
fire %>%
group_by(Inc_des) %>%
summarize(count = n()) %>%
filter(Inc_des == 'EMS call')
#
incident <- fire %>%
group_by(Inc_des) %>%
summarize(count = n()) %>%
arrange(count) %>%
filter(count > 90, Inc_des != 'EMS call') %>%
tail(10)
incident
#
ggplot(data = fire,
mapping = aes(x = Inc_des, fill = Inc_des)) +
geom_bar() +  # We have an issue here
scale_x_discrete(limits = incident$Inc_des, label=function(x) stringr::str_trunc(x,18)) +
xlab("Incident Description") +
guides(fill = 'none') +
coord_flip()
#  Further "cleaning"
alarm <- fire %>%
# modification of variables for the graphs
mutate(Call = mdy_hm(Alm_dt),
Date = date(Call),
Mon = month(Call, label = TRUE),
Weekday = wday(Call, label = TRUE),
Hour = as.ordered(hour(Call)+1),
HourNum = hour(Call)+1) %>%
# modification of variables for the summary statistics
mutate(MonNum = month(Call, label = FALSE),
WeekdayNum = wday(Call, label = FALSE))
#* alarm  %>%
#  summarise(meanCall = mean(Call),
#           meanDate = mean(Date),
#            meanMon = month(round(mean(MonNum)), label = TRUE),
#           meanWeekDay = wday(round(mean(WeekdayNum)), label = TRUE))
# summary statistics
summary(alarm$HourNum)
perHour <- alarm %>%
group_by(Hour) %>%
summarise(count = n())
stats <- perHour %>%
summarise(maxCalls = max(count),
minCalls = min(count))
left_join(stats, perHour, by = c( 'maxCalls' = 'count')) %>% select(Hour, maxCalls)
left_join(stats, perHour, by = c('minCalls' = 'count')) %>% select(Hour, minCalls)
# histogram of number of calls by hour
ggplot(data = alarm,
mapping = aes(x= Hour, fill = Hour)) +
geom_bar( binwidth = 1, bins = 24) +
labs(title = "Number of calls per Hour", y='Number of calls', x='Hour of the day') +
guides(fill = 'none')
#  using dplyr and leaflet we filtered how much zoom and what part of the world the map would show
m <- leaflet() %>%
addTiles() %>%
setView(lat = 44.475, lng = -73.212, zoom = 12)
# Using leaflet, we made a map showing circles on the location of each incident.
m  %>% addCircles(lng = fire$Long, lat = fire$Lat) %>% addTitle(object, "hello", color = "black", fontSize = "20px", fontFamily = "Sans", leftPosition = 50, topPosition = 2)
#  using dplyr and leaflet we filtered how much zoom and what part of the world the map would show
m <- leaflet() %>%
addTiles() %>%
setView(lat = 44.475, lng = -73.212, zoom = 12)%>% addTitle(object, "hello", color = "black", fontSize = "20px", fontFamily = "Sans", leftPosition = 50, topPosition = 2)
#  using dplyr and leaflet we filtered how much zoom and what part of the world the map would show
m <- leaflet() %>%
addTiles() %>%
setView(lat = 44.475, lng = -73.212, zoom = 12) %>% addTitle(object, "hello", color = "black", fontSize = "20px", fontFamily = "Sans", leftPosition = 50, topPosition = 2)
#  using dplyr and leaflet we filtered how much zoom and what part of the world the map would show
m <- leaflet() %>%
addTiles() %>%
setView(lat = 44.475, lng = -73.212, zoom = 12) %>% addTitle("hello")
#  using dplyr and leaflet we filtered how much zoom and what part of the world the map would show
m <- leaflet() %>%
addTiles() %>%
setView(lat = 44.475, lng = -73.212, zoom = 12)
# Using leaflet, we made a map showing circles on the location of each incident.
m  %>% addCircles(lng = fire$Long, lat = fire$Lat) %>% addTitle("hello")
#  using dplyr and leaflet we filtered how much zoom and what part of the world the map would show
m <- leaflet(title = "hello") %>%
addTiles() %>%
setView(lat = 44.475, lng = -73.212, zoom = 12)
#  using dplyr and leaflet we filtered how much zoom and what part of the world the map would show
m <- leaflet() %>%
addTiles() %>%
setView(lat = 44.475, lng = -73.212, zoom = 12) %>%  addPolygons(stroke = FALSE, smoothFactor = 0.2, fillOpacity = 1)
#  using dplyr and leaflet we filtered how much zoom and what part of the world the map would show
m <- leaflet() %>%
addTiles() %>%
setView(lat = 44.475, lng = -73.212, zoom = 12) %>%  addPolygons(stroke = FALSE, smoothFactor = 0.2, fillOpacity = 1, color = ~qpal(gdp_md_est))
#  using dplyr and leaflet we filtered how much zoom and what part of the world the map would show
m <- leaflet() %>%
addTiles() %>%
setView(lat = 44.475, lng = -73.212, zoom = 12)
# Using leaflet, we made a map showing circles on the location of each incident.
m  %>% addCircles(lng = fire$Long, lat = fire$Lat) %>%  addPolygons(stroke = FALSE, smoothFactor = 0.2, fillOpacity = 1, color = ~qpal(gdp_md_est))
#  new data frame to group data by unit, get the how many calls they responded to,
# arranged in descending according to count and only show unit and count
f2 <- fire %>%
group_by(Unit) %>%
summarize(count = n()) %>%
arrange(desc(count)) %>%
select(Unit = Unit, count = count) %>%
filter(count > 90)
# bar graph of number of calls each unit responded to
ggplot(data = fire,
mapping = aes(x = Unit, fill = Unit) ) +
geom_bar() +
theme(axis.text.x = element_text(hjust=1, angle = 60)) +
scale_x_discrete(limits = f2$Unit) +
guides(fill=FALSE) +
labs(title = "Unit Response ")
